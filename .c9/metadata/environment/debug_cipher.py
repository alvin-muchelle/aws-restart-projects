{"filter":false,"title":"debug_cipher.py","tooltip":"/debug_cipher.py","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["\"\"\"","Your module description","\"\"\"",""],"id":1},{"start":{"row":0,"column":0},"end":{"row":3,"column":47},"action":"insert","lines":["ame = \"John\"","print(\"Hello \" + name + \".\")","age = 40","print(name + \" is \" + str(age) + \" years old.\")"]}],[{"start":{"row":0,"column":0},"end":{"row":3,"column":47},"action":"remove","lines":["ame = \"John\"","print(\"Hello \" + name + \".\")","age = 40","print(name + \" is \" + str(age) + \" years old.\")"],"id":2},{"start":{"row":0,"column":0},"end":{"row":55,"column":24},"action":"insert","lines":["# Module Lab: Caesar Cipher Program Bug #1","#","# In a previous lab, you created a Caesar cipher program. This version of","# the program is buggy. Use a debugger to find the bug and fix it.","","# Double the given alphabet","def getDoubleAlphabet(alphabet):","    doubleAlphabet = alphabet + alphabet","    return doubleAlphabet","","# Get a message to encrypt","def getMessage():","    stringToEncrypt = input(\"Please enter a message to encrypt: \")","    return stringToEncrypt","","# Get a cipher key","def getCipherKey():","    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")","    return shiftAmount","","# Encrypt message","def encryptMessage(message, cipherKey, alphabet):","    encryptedMessage = \"\"","    uppercaseMessage = \"\"","    uppercaseMessage = message.upper()","    for currentCharacter in uppercaseMessage:","        position = alphabet.find(currentCharacter)","        newPosition = position + cipherKey","        if currentCharacter in alphabet:","            encryptedMessage = encryptedMessage + alphabet[newPosition]","        else:","            encryptedMessage = encryptedMessage + currentCharacter","    return encryptedMessage","","# Decrypt message","def decryptMessage(message, cipherKey, alphabet):","    decryptKey = -1 * int(cipherKey)","    return encryptMessage(message, decryptKey, alphabet)","","# Main program logic","def runCaesarCipherProgram():","    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"","    print(f'Alphabet: {myAlphabet}')","    myAlphabet2 = getDoubleAlphabet(myAlphabet)","    print(f'Alphabet2: {myAlphabet2}')","    myMessage = getMessage()","    print(myMessage)","    myCipherKey = getCipherKey()","    print(myCipherKey)","    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)","    print(f'Encrypted Message: {myEncryptedMessage}')","    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)","    print(f'Decrypted Message: {myDecryptedMessage}')","","# Main logic","runCaesarCipherProgram()"]}],[{"start":{"row":27,"column":42},"end":{"row":27,"column":43},"action":"insert","lines":[")"],"id":3}],[{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"insert","lines":["i"],"id":4},{"start":{"row":27,"column":34},"end":{"row":27,"column":35},"action":"insert","lines":["n"]},{"start":{"row":27,"column":35},"end":{"row":27,"column":36},"action":"insert","lines":["t"]}],[{"start":{"row":27,"column":36},"end":{"row":27,"column":37},"action":"insert","lines":["("],"id":5}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":28,"column":0},"end":{"row":28,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"784b51fb871369e13629689d31afef974e3daef1"}